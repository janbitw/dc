stages:
  - test 
  - build
  - analyse
  - deploy

variables:
  PROJECT_DIR: "./Exercise01/"

build-Ex01:
  stage: build
  image: gradle:8.0-jdk17
  script:
    - cd $PROJECT_DIR
    - echo "compiling and creating deployable artifact"
    - gradle assemble
  artifacts:
    paths:
      - $PROJECT_DIR/build/*
    expire_in: 1 day

test-Ex01:
  stage: test
  image: gradle:8.0-jdk17
  script:
    - cd $PROJECT_DIR
    - echo "Running Unit Tests and Static Code analysis"
    - gradle check
  artifacts:
    reports:
      junit:
        - $PROJECT_DIR/build/test-results/test/TEST-*.xml
    paths:
      - $PROJECT_DIR/build/*
    expire_in: 1 day

analyse-Ex01:
  stage: analyse
  image: gradle:8.0-jdk17
  allow_failure: true
  script:
    - cd $PROJECT_DIR
    - echo "Dumping Information into Sonarqube"
    - gradle sonarqube -Dsonar.login=$SONAR_TOKEN

dockerize-Ex01:
  # Official docker image.
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script: # install docker
    - docker pull eclipse-temurin:17.0.6_10-jre
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - cd $PROJECT_DIR
    - docker build -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

