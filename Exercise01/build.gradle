plugins {
    id 'java'
    id("org.sonarqube") version "4.0.0.2929"
    id 'jacoco'
}

group 'de.thro.vv'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.mockito:mockito-core:3.+"
    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'ch.qos.logback:logback-classic:1.4.6'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'uk.org.webcompere:system-stubs-core:2.0.2'
    testImplementation 'uk.org.webcompere:system-stubs-jupiter:2.0.2'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

}

test {
    useJUnitPlatform()
    ignoreFailures = true
    finalizedBy jacocoTestReport
}
jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

sonarqube {
    properties {
        property "sonar.host.url", "https://inf-sonarqube.th-rosenheim.de"
        property "sonar.projectKey", "TamasJan"
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': 'Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
